import datetime

from data import texts

parser_get_posts = "–ü–æ–ª—É—á–∏–ª <b>{count_posts} –æ–±—å—è–≤–ª–µ–Ω–∏–π</b>, –∏—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ"
parser_many_get_posts = """\
–ü–æ —Å—Å—ã–ª–∫–µ {url}
–ü–æ–ª—É—á–∏–ª <b>{count_posts} –æ–±—å—è–≤–ª–µ–Ω–∏–π</b>, –∏—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ
"""

parse_count = "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —Å–ø–∞—Ä—Å–∏—Ç—å –æ–±—å—è–≤–ª–µ–Ω–∏–π?"
parse_count_invalid = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∞ –Ω–µ —Ç–µ–∫—Å—Ç"
parse_count_too_much = "–ß–∏—Å–ª–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, —É–∫–∞–∂–∏—Ç–µ –º–µ–Ω—å—à–µ <b>{max_count}</b>"

all_urls_text = """
–°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫:
{urls}

–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /del —Å —Å—Å—ã–ª–∫–æ–π
–ü—Ä–∏–º–µ—Ä: <b>/del {url}</b>
"""

invalid_pars_url_del = """
–ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É

–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /del —Å —Å—Å—ã–ª–∫–æ–π
–ü—Ä–∏–º–µ—Ä: <b>/del https://mobil.bazos.cz/</b>
"""

parse_post_date = """\
–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è

–û—Ç–ø—Ä–∞–≤—å—Ç–µ 'no' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä
"""

parse_creator_date = """\
–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞

–û—Ç–ø—Ä–∞–≤—å—Ç–µ 'no' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä
"""

parse_business_account = """\
–°–æ–±–∏—Ä–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤? 
"""

parse_date_invalid = "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ 'no' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä"

parse_price = """
–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã (–≤ {coin}) —Ç–æ–≤–∞—Ä–∞:

<b>–ü—Ä–∏–º–µ—Ä: 100-800</b>
"""

parse_currency = """
–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É: {currencies}
"""

bad_parse_currency = """
–ù–µ–≤–µ—Ä–Ω–∞—è –≤–∞–ª—é—Ç–∞
–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π: {currencies}
"""

parse_price_invalid = "–í—ã —É–∫–∞–∑–∞–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑."

parse_seller_posts = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–ª-–≤–æ –æ–±—å—è–≤–ª–µ–Ω–∏–π –ø—Ä–æ–¥–∞–≤—Ü–∞

–ü—Ä–∏–º–µ—Ä: 10 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª-–≤–æ –æ–±—å—è–≤–ª–µ–Ω–∏–π –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_seller_rating = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞

–ü—Ä–∏–º–µ—Ä: 3 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥ –º–µ–Ω—å—à–µ, –ª–∏–±–æ —Ä–∞–≤–µ–Ω 3)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_seller_reviews = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞

–ü—Ä–∏–º–µ—Ä: 3 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –º–µ–Ω—å—à–µ, –ª–∏–±–æ —Ä–∞–≤–Ω–æ 3)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_post_views = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏—è

–ü—Ä–∏–º–µ—Ä: 10 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_taken_item_count = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–ª-–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–æ–º

–ü—Ä–∏–º–µ—Ä: 10 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª-–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_given_item_count = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–æ–º

–ü—Ä–∏–º–µ—Ä: 10 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_reports_received_count = """
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–ª-–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–º

–ü—Ä–∏–º–µ—Ä: 10 (–ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª-–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–º –Ω–µ –±—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_seller_posts_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –∫–æ–ª-–≤–æ –æ–±—å—è–≤–ª–µ–Ω–∏–π –ø—Ä–æ–¥–∞–≤—Ü–∞

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_seller_rating_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_seller_reviews_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_post_views_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏—è

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_taken_item_count_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –∫–æ–ª-–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_given_item_count_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –∫–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

parse_reports_received_count_invalid = """
–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</b> –∫–æ–ª-–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∞—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä –Ω–∞–∂–º–∏—Ç–µ 'no'
"""

presets = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—Ä–µ—Å–µ—Ç"

parse_save_preset = """
üíæ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞?

<b>'yes' - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å</b> (–µ—Å–ª–∏ –≤—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏—Ö –≤ –ø—Ä–µ—Å–µ—Ç–∞—Ö)

<b>'no' - –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å</b>
"""


def get_preset_settings_text(data):
    text = []
    if data.get('name') is not None:
        text.append(f"–ò–º—è: <b>{data.get('name')}</b>")
    if data.get('price') is not None:
        text.append(f"–†–∞–º–∫–∏ —Ü–µ–Ω—ã: <b>{data.get('price')} {data.get('currency')}</b>")
    if data.get('max_posts') is not None:
        text.append(f"–ö–æ–ª-–≤–æ –æ–±—å—è–≤–ª–µ–Ω–∏–π —É –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{data.get('max_posts')}</b>")
    if data.get('max_rating') is not None:
        text.append(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{data.get('max_rating')}</b>")
    if data.get('max_views') is not None:
        text.append(f"–ö–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: <b>{data.get('max_views')}</b>")
    if data.get('reg_date') is not None:
        text.append(f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{data.get('reg_date')}</b>")
    if data.get('post_date') is not None:
        text.append(f"–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: <b>{data.get('post_date')}</b>")

    return '\n'.join(text)


preset_settings = """
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –ø—Ä–µ—Å–µ—Ç–∞:
{settings}
–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞:

<b>–ü—Ä–∏–º–µ—Ä: 100</b>
"""

preset_save_name = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞"

preset_saved = "–ü—Ä–µ—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
preset_alredy_exists = "–ü—Ä–µ—Å–µ—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ –µ—Å—Ç—å, –ø—Ä–µ—Å–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!"
parse_url = """\
–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
(–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —Å–∞–π—Ç–∞ - /en/ –≤ —Å—Å—ã–ª–∫–µ):

<b>–ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: {parser_link}</b>
"""
parse_many_urls = """\
–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏–ª–∏ —Å–ª–æ–≤–∞
(–∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ —Å–ª–æ–≤–æ –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ):

<b>–ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: {parser_link}</b>
<b>–ü—Ä–∏–º–µ—Ä —Å–ª–æ–≤–∞: Apple</b>
"""

# parse_start_sub = "üü¢ –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è <b>{date}</b>"
parse_start_sub = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç'
parse_starts = "<b>–ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è</b> ü§ñ"
parse_ends = "<b>–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è</b> üíã\n"


def parser_text_end(skip_data):
    text = ['–û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–æ—à–µ–¥—à–∏–µ']
    if skip_data.get('skip_post_price') is not None:
        text.append(f"–ü–æ —Ü–µ–Ω–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {skip_data.get('skip_post_price')}")
    if skip_data.get('skip_post_date') is not None:
        text.append(f"–ü–æ –¥–∞—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {skip_data.get('skip_post_date')}")
    if skip_data.get('skip_reg_date') is not None:
        text.append(f"–ü–æ –¥–∞—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {skip_data.get('skip_reg_date')}")
    if skip_data.get('skip_max_posts') is not None:
        text.append(f"–ü–æ –∫–æ–ª-–≤—É –ø–æ—Å—Ç–æ–≤: {skip_data.get('skip_max_posts')}")
    if skip_data.get('skip_max_views') is not None:
        text.append(f"–ü–æ –∫–æ–ª-–≤—É –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {skip_data.get('skip_max_views')}")
    if skip_data.get('skip_max_rating') is not None:
        text.append(f"–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É –ø—Ä–æ–¥–∞–≤—Ü–∞: {skip_data.get('skip_max_rating')}")

    if skip_data.get('skip_only_phone') is not None:
        text.append(f"–ë–µ–∑ –Ω–æ–º–µ—Ä–∞: {skip_data.get('skip_only_phone')}")
    if skip_data.get('skip_ban_word') is not None:
        text.append(f"–°–ª–æ–≤–æ –≤ —á—Å: {skip_data.get('skip_ban_word')}")
    if skip_data.get('skip_ban_post') is not None:
        text.append(f"–û–±—å—è–≤–ª–µ–Ω–∏–µ –≤ —á—Å: {skip_data.get('skip_ban_post')}")
    if skip_data.get('anythink_skip') is not None:
        text.append(f"–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞: {skip_data.get('anythink_skip')}")
    if skip_data.get('all_count') is not None:
        text.append(f"–í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {skip_data.get('all_count')}")

    return '\n'.join(text)


parse_interrupted = "–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω –¥–æ—Å—Ä–æ—á–Ω–æ!"

parser_texts = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç"

parser_text_info = """
<b>{name}</b>

<i>{text}</i>
"""

new_text_without_seller = """
<b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è WhatsApp</b>

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–≤–∞ –≤—Å—Ç–∞–≤–∫–∏:
<code>@link</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É
<code>@price</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
<code>@itemname</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞

üü¶ –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–æ –≤—Å—Ç–∞–≤–∫—É –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
"""

new_text = """
<b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è WhatsApp</b>

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ–≤–∞ –≤—Å—Ç–∞–≤–∫–∏:
<code>@link</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç —Ç–µ–∫—É—â—É—é —Å—Å—ã–ª–∫—É
<code>@seller</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç –∏–º—è –ø—Ä–æ–¥–∞–≤—Ü–∞
<code>@price</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
<code>@itemname</code> - –ü–æ–¥—Å—Ç–∞–≤–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞

üü¶ –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–æ –≤—Å—Ç–∞–≤–∫—É –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
"""
new_text_name = "–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–º—É —Ç–µ–∫—Å—Ç—É —Å—Ç–∞—Ä—Ç–∞ WhatsApp"
new_text_name_exists = "–¢–µ–∫—Å—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ –µ—Å—Ç—å —É –≤–∞—Å"

choice_parser_country = "<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–æ—â–∞–¥–∫—É, –≥–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>"


class PostFromDict:
    def __init__(self, data: dict):
        for key, val in data.items():
            setattr(self, key, val)


def create_result_text(post, log, extra: dict):
    text = "üì¶ –¢–æ–≤–∞—Ä"
    if log.title and hasattr(post, 'title'):
        text += f": <code>{post.title}</code>\n"
    if log.description and hasattr(post, 'description'):
        text += f"üòá –û–ø–∏—Å–∞–Ω–∏–µ: <i>{post.description}</i>\n"
    if log.price:
        currency = extra.get('currency', '')
        text += f"üí∞ –¶–µ–Ω–∞: <b>{post.price} {currency}</b>\n\n"
    if log.location and hasattr(post, 'town'):
        text += f"üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {post.town}\n\n"
    # if post.phone and hasattr(post, 'phone'):
    #     text += f"üìû –ö–æ–Ω—Ç–∞–∫—Ç(-—ã): <code>{post.phone}</code>\n"
    #     text += f"WhatsApp: <a href='https://api.whatsapp.com/send?phone={post.phone}'>–ö–ª–∏–∫</a>\n"
    #     text += f"üñ• WEB WhatsApp: <a href='https://web.whatsapp.com/send?phone={post.phone}'>–ö–ª–∏–∫</a>\n\n"
    #     text += texts.goviber.format(phone=post.phone)
    #     text += texts.gotelegram.format(phone=post.phone) + "\n"
    #     wa_texts = extra.get('wa_texts')
    #     if wa_texts:
    #         wa_web_text = " ".join(list(map(lambda t: t[0], wa_texts)))
    #         wa_mob_text = " ".join(list(map(lambda t: t[1], wa_texts)))
    #         text += f"üì± WhatsApp (–í–∞—à —Ç–µ–∫—Å—Ç): {wa_mob_text}\n" + \
    #                 f"üñ• WEB WhatsApp (–í–∞—à —Ç–µ–∫—Å—Ç): {wa_web_text}\n\n"
    # if log.views and hasattr(post, 'views'):
    #     text += f"üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {post.views}\n"
    if log.created and hasattr(post, 'created'):
        created = post.created.strftime('%Y-%m-%d') if isinstance(post.created, datetime.datetime) else post.created
        text += f"üóì –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è: <b>{created}</b>\n"
    if log.seller_reg and hasattr(post, 'seller_reg'):
        seller_reg = post.seller_reg.strftime('%Y-%m-%d') if isinstance(post.seller_reg, datetime.datetime) \
            else post.seller_reg
        text += f"üóì –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{seller_reg}</b>\n"
    if log.posts_count and hasattr(post, 'seller_posts'):
        text += f"üî¢ –û–±—å—è–≤–ª–µ–Ω–∏–π –ø—Ä–æ–¥–∞–≤—Ü–∞: {post.seller_posts}\n"
    text += f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: <a href='{post.link}'>–ù–∞–∂–º–∏</a>\n"

    if hasattr(post, 'photo_url'):
        if post.photo_url:
            text += f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ: <a href='{post.photo_url}'>–ù–∞–∂–º–∏</a>\n"

    if log.seller_name and hasattr(post, 'seller_name'):
        text += f"üë® –ò–º—è –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{post.seller_name}</b>\n"

    if hasattr(post, 'seller_rating'):
        text += f'‚≠ê –†–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–∞ <b>{post.seller_rating}</b>\n'

    if hasattr(post, 'seller_reviews'):
        text += f'‚≠ê –ß–∏—Å–ª–æ –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞ <b>{post.seller_reviews}</b>\n'

    return text


start_parsing_text = '–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞. –ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
